@page "/login"

<RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" Style="height: 80vh; width: 100%">
    <RadzenCard Style="width: 500px;">
        <RadzenFieldset Text="Данные аккаунта">
            <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="1rem" >
                <RadzenFormField Text="Почта" Variant="Variant.Outlined" Style="width:100%;">
                    <End>
                        <RadzenIcon Icon="account_circle" />
                    </End>
                    <ChildContent>
                        <RadzenTextBox @bind-Value=@LoginUser.Email></RadzenTextBox>
                    </ChildContent>
                </RadzenFormField>
                <RadzenFormField Text="Пароль" Variant="Variant.Outlined" Style="width:100%;">
                    <ChildContent>
                        <RadzenTextBox @bind-Value="@passwordValue" Visible="@(!passwordVisable)" />
                        <RadzenPassword @bind-Value="@passwordValue" Visible="@passwordVisable" />
                    </ChildContent>
                    <End>
                        <RadzenButton Icon="@(passwordVisable ? "visibility" : "visibility_off")" Click="TogglePassword" Variant="Variant.Text" Size="ButtonSize.Medium" Style="margin-right: -5px;" />
                    </End>
                </RadzenFormField>
                <RadzenButton IsBusy=@submitButtonIsBusy BusyText="Поиск пользователя" Click="@Submit" ButtonType="ButtonType.Submit" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Dark" Style="width: 150px;" Variant="Variant.Outlined" Icon="login" Text="Войти" />
                <RadzenLink Icon="person_add" Path="signup" Text="у меня нет аккаунта" IconColor="@Colors.Info" Style="color: #076791; text-align:center; margin-top: -15px;" />
            </RadzenStack>
        </RadzenFieldset>
    </RadzenCard>
    <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" Style="width: 100%; margin-top: 40px;">
        <RadzenAlert Visible="@alertVisible" AllowClose="false"  AlertStyle="AlertStyle.Danger" Variant="Variant.Filled" Shade="Shade.Lighter" Style="position: fixed; width: 500px;">
            Пользователь не найден! 
            Проверьте введенные данные.
        </RadzenAlert>
    </RadzenStack>
</RadzenStack>

@code 
{
    private UserLoginDto LoginUser { get; set; } = new();

    private string passwordValue { get; set; } = string.Empty;
    private bool passwordVisable { get; set; } = true;
    private bool alertVisible { get; set; } = false;
    private bool submitButtonIsBusy { get; set; } = false;


    // protected override async Task OnInitializedAsync()
    // {
    // }

    private void TogglePassword()
    {
        passwordVisable = !passwordVisable;
    }


    private async void Submit()
    {
        submitButtonIsBusy = true;
        LoginUser.Password = passwordValue;
        var res = await UserService.Login(LoginUser);
        if(!string.IsNullOrEmpty(res))
        {
            submitButtonIsBusy = false;
            alertVisible = false;
            await AuthStateProvider.GetAuthenticationStateAsync();
            NavigationManager.NavigateTo("/", false);
        } 
        else
        {
            submitButtonIsBusy = false;
            alertVisible = true;
        }
        StateHasChanged();
    }
}
